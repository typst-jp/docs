{% import 'macros.html.j2' as macros %}

{% extends "base_template.html.j2" %}
{% block content %}

<h1 id="summary"><span class="pill {{ type2class(body['content']['name']) }}">{{ body['content']['name'] }}</span></h1>
{{ body['content']['details'] | safe }}

{% if body['content']['constructor'] %}
<h2 id="constructor">
  {{ macros.tooltip_display('コンストラクタ', 'If a type has a constructor, you can call it like a function to create a new value of the type.', prefix='constructor') }}
</h2>
{{ macros.function_display(body['content']['constructor'], type2href, type2class, gen_path, prefix='constructor', is_example_folding=false) }}
{% endif %}


{% if body['content']['scope'].__len__() > 0 %}
<h2 id="definitions">
  {{ macros.tooltip_display('定義', 'Functions and types and can have associated definitions. These are accessed by specifying the function or type, followed by a period, and then the definition\'s name.', prefix='definitions') }}
</h2>
{% endif %}
{% for method in body['content']['scope'] %}
  <h3 id="definitions-{{ method['name'] }}" class="method-head">
    <code>{{ method['name'] }}</code>
    <small>
      {% if method['element'] %}
        {{ macros.tooltip_display('Element', 'Element functions can be customized with <code>set</code> and <code>show</code> rules.') }}
      {% endif %}
      {% if method['contextual'] %}
        {{ macros.tooltip_display('Contextual', 'Contextual functions can only be used when the context is known') }}
      {% endif %}
    </small>
  </h3>
  {{ macros.function_display(method, type2href, type2class, gen_path, prefix='definitions-' + method['name']) }}
{% endfor %}

{% endblock %}
