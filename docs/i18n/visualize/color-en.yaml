route: /docs/reference/visualize/color/
title: Color
description: Documentation for the Color type.
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: predefined-colors
  name: Predefined Colors
  children: []
- id: predefined-color-maps
  name: Predefined Color Maps
  children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-luma
    name: Luma
    children:
    - id: definitions-luma-lightness
      name: lightness
      children: []
    - id: definitions-luma-alpha
      name: alpha
      children: []
    - id: definitions-luma-color
      name: color
      children: []
  - id: definitions-oklab
    name: Oklab
    children:
    - id: definitions-oklab-lightness
      name: lightness
      children: []
    - id: definitions-oklab-a
      name: a
      children: []
    - id: definitions-oklab-b
      name: b
      children: []
    - id: definitions-oklab-alpha
      name: alpha
      children: []
    - id: definitions-oklab-color
      name: color
      children: []
  - id: definitions-oklch
    name: Oklch
    children:
    - id: definitions-oklch-lightness
      name: lightness
      children: []
    - id: definitions-oklch-chroma
      name: chroma
      children: []
    - id: definitions-oklch-hue
      name: hue
      children: []
    - id: definitions-oklch-alpha
      name: alpha
      children: []
    - id: definitions-oklch-color
      name: color
      children: []
  - id: definitions-linear-rgb
    name: Linear RGB
    children:
    - id: definitions-linear-rgb-red
      name: red
      children: []
    - id: definitions-linear-rgb-green
      name: green
      children: []
    - id: definitions-linear-rgb-blue
      name: blue
      children: []
    - id: definitions-linear-rgb-alpha
      name: alpha
      children: []
    - id: definitions-linear-rgb-color
      name: color
      children: []
  - id: definitions-rgb
    name: RGB
    children:
    - id: definitions-rgb-red
      name: red
      children: []
    - id: definitions-rgb-green
      name: green
      children: []
    - id: definitions-rgb-blue
      name: blue
      children: []
    - id: definitions-rgb-alpha
      name: alpha
      children: []
    - id: definitions-rgb-hex
      name: hex
      children: []
    - id: definitions-rgb-color
      name: color
      children: []
  - id: definitions-cmyk
    name: CMYK
    children:
    - id: definitions-cmyk-cyan
      name: cyan
      children: []
    - id: definitions-cmyk-magenta
      name: magenta
      children: []
    - id: definitions-cmyk-yellow
      name: yellow
      children: []
    - id: definitions-cmyk-key
      name: key
      children: []
    - id: definitions-cmyk-color
      name: color
      children: []
  - id: definitions-hsl
    name: HSL
    children:
    - id: definitions-hsl-hue
      name: hue
      children: []
    - id: definitions-hsl-saturation
      name: saturation
      children: []
    - id: definitions-hsl-lightness
      name: lightness
      children: []
    - id: definitions-hsl-alpha
      name: alpha
      children: []
    - id: definitions-hsl-color
      name: color
      children: []
  - id: definitions-hsv
    name: HSV
    children:
    - id: definitions-hsv-hue
      name: hue
      children: []
    - id: definitions-hsv-saturation
      name: saturation
      children: []
    - id: definitions-hsv-value
      name: value
      children: []
    - id: definitions-hsv-alpha
      name: alpha
      children: []
    - id: definitions-hsv-color
      name: color
      children: []
  - id: definitions-components
    name: Components
    children:
    - id: definitions-components-alpha
      name: alpha
      children: []
  - id: definitions-space
    name: Space
    children: []
  - id: definitions-to-hex
    name: To Hex
    children: []
  - id: definitions-lighten
    name: Lighten
    children:
    - id: definitions-lighten-factor
      name: factor
      children: []
  - id: definitions-darken
    name: Darken
    children:
    - id: definitions-darken-factor
      name: factor
      children: []
  - id: definitions-saturate
    name: Saturate
    children:
    - id: definitions-saturate-factor
      name: factor
      children: []
  - id: definitions-desaturate
    name: Desaturate
    children:
    - id: definitions-desaturate-factor
      name: factor
      children: []
  - id: definitions-negate
    name: Negate
    children:
    - id: definitions-negate-space
      name: space
      children: []
  - id: definitions-rotate
    name: Rotate
    children:
    - id: definitions-rotate-angle
      name: angle
      children: []
    - id: definitions-rotate-space
      name: space
      children: []
  - id: definitions-mix
    name: Mix
    children:
    - id: definitions-mix-colors
      name: colors
      children: []
    - id: definitions-mix-space
      name: space
      children: []
  - id: definitions-transparentize
    name: Transparentize
    children:
    - id: definitions-transparentize-scale
      name: scale
      children: []
  - id: definitions-opacify
    name: Opacify
    children:
    - id: definitions-opacify-scale
      name: scale
      children: []
body:
  kind: type
  content:
    name: color
    title: Color
    keywords: []
    oneliner: A color in a specific color space.
    details: |-
      <p>A color in a specific color space.</p>
      <p>Typst supports:</p>
      <ul>
      <li>sRGB through the <a href="/docs/reference/visualize/color/#definitions-rgb"><code>rgb</code> function</a></li>
      <li>Device CMYK through <a href="/docs/reference/visualize/color/#definitions-cmyk"><code>cmyk</code> function</a></li>
      <li>D65 Gray through the <a href="/docs/reference/visualize/color/#definitions-luma"><code>luma</code> function</a></li>
      <li>Oklab through the <a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code> function</a></li>
      <li>Oklch through the <a href="/docs/reference/visualize/color/#definitions-oklch"><code>oklch</code> function</a></li>
      <li>Linear RGB through the <a href="/docs/reference/visualize/color/#definitions-linear-rgb"><code>color.linear-rgb</code> function</a></li>
      <li>HSL through the <a href="/docs/reference/visualize/color/#definitions-hsl"><code>color.hsl</code> function</a></li>
      <li>HSV through the <a href="/docs/reference/visualize/color/#definitions-hsv"><code>color.hsv</code> function</a></li>
      </ul>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/90f2b6a88dd0e86c2e96e90445674f20.png" alt="Preview" width="480" height="190"/></div></div>
      <h2 id="predefined-colors">Predefined colors</h2>
      <p>Typst defines the following built-in colors:</p>
      <table><thead><tr><th>Color</th><th style="text-align: left">Definition</th></tr></thead><tbody>
      <tr><td><code>black</code></td><td style="text-align: left"><code><span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>gray</code></td><td style="text-align: left"><code><span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">170</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>silver</code></td><td style="text-align: left"><code><span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">221</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>white</code></td><td style="text-align: left"><code><span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">255</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>navy</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#001f3f&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>blue</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#0074d9&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>aqua</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#7fdbff&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>teal</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#39cccc&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>eastern</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#239dad&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>purple</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#b10dc9&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>fuchsia</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#f012be&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>maroon</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#85144b&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>red</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#ff4136&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>orange</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#ff851b&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>yellow</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#ffdc00&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>olive</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#3d9970&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>green</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#2ecc40&quot;</span><span class="typ-punct">)</span></code></td></tr>
      <tr><td><code>lime</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#01ff70&quot;</span><span class="typ-punct">)</span></code></td></tr>
      </tbody></table>
      <p>The predefined colors and the most important color constructors are
      available globally and also in the color type's scope, so you can write
      either <code>color.red</code> or just <code>red</code>.</p>
      <h2 id="predefined-color-maps">Predefined color maps</h2>
      <p>Typst also includes a number of preset color maps that can be used for
      <a href="/docs/reference/visualize/gradient/#definitions-linear">gradients</a>. These are simply arrays of colors defined in
      the module <code>color.map</code>.</p>
      <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">circle</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>crest<span class="typ-punct">)</span><span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/2c2ef5b1f24d9348a16192e851ca0419.png" alt="Preview" width="480" height="190"/></div></div><table><thead><tr><th>Map</th><th style="text-align: left">Details</th></tr></thead><tbody>
      <tr><td><code>turbo</code></td><td style="text-align: left">A perceptually uniform rainbow-like color map. Read <a href="https://ai.googleblog.com/2019/08/turbo-improved-rainbow-colormap-for.html">this blog post</a> for more details.</td></tr>
      <tr><td><code>cividis</code></td><td style="text-align: left">A blue to gray to yellow color map. See <a href="https://bids.github.io/colormap/">this blog post</a> for more details.</td></tr>
      <tr><td><code>rainbow</code></td><td style="text-align: left">Cycles through the full color spectrum. This color map is best used by setting the interpolation color space to <a href="/docs/reference/visualize/color/#definitions-hsl">HSL</a>. The rainbow gradient is <strong>not suitable</strong> for data visualization because it is not perceptually uniform, so the differences between values become unclear to your readers. It should only be used for decorative purposes.</td></tr>
      <tr><td><code>spectral</code></td><td style="text-align: left">Red to yellow to blue color map.</td></tr>
      <tr><td><code>viridis</code></td><td style="text-align: left">A purple to teal to yellow color map.</td></tr>
      <tr><td><code>inferno</code></td><td style="text-align: left">A black to red to yellow color map.</td></tr>
      <tr><td><code>magma</code></td><td style="text-align: left">A black to purple to yellow color map.</td></tr>
      <tr><td><code>plasma</code></td><td style="text-align: left">A purple to pink to yellow color map.</td></tr>
      <tr><td><code>rocket</code></td><td style="text-align: left">A black to red to white color map.</td></tr>
      <tr><td><code>mako</code></td><td style="text-align: left">A black to teal to yellow color map.</td></tr>
      <tr><td><code>vlag</code></td><td style="text-align: left">A light blue to white to red color map.</td></tr>
      <tr><td><code>icefire</code></td><td style="text-align: left">A light teal to black to yellow color map.</td></tr>
      <tr><td><code>flare</code></td><td style="text-align: left">A orange to purple color map that is perceptually uniform.</td></tr>
      <tr><td><code>crest</code></td><td style="text-align: left">A blue to white to red color map.</td></tr>
      </tbody></table>
      <p>Some popular presets are not included because they are not available under a
      free licence. Others, like
      <a href="https://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/">Jet</a>,
      are not included because they are not color blind friendly. Feel free to use
      or create a package with other presets that are useful to you!</p>
    constructor: null
    scope:
    - path:
      - color
      name: luma
      title: Luma
      keywords: []
      oneliner: Create a grayscale color.
      element: false
      contextual: false
      details: |-
        <p>Create a grayscale color.</p>
        <p>A grayscale color is represented internally by a single <code>lightness</code>
        component.</p>
        <p>These components are also available using the
        <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> x <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">250</span><span class="typ-punct">,</span> step<span class="typ-punct">:</span> <span class="typ-num">50</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
          <span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-punct">}</span>
        </code></pre><div class="preview"><img src="/assets/docs/1aa2cf2b25d34b2e2fea8240fab55935.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: lightness
        details: <p>The lightness component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: alpha
        details: <p>The alpha component.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: color
        details: |-
          <p>Alternatively: The color to convert to grayscale.</p>
          <p>If this is given, the <code>lightness</code> should not be given.</p>
        example: null
        types:
        - color
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: oklab
      title: Oklab
      keywords: []
      oneliner: Create an [Oklab](https://bottosson.github.io/posts/oklab/) color.
      element: false
      contextual: false
      details: |-
        <p>Create an <a href="https://bottosson.github.io/posts/oklab/">Oklab</a> color.</p>
        <p>This color space is well suited for the following use cases:</p>
        <ul>
        <li>Color manipulation such as saturating while keeping perceived hue</li>
        <li>Creating grayscale images with uniform perceived lightness</li>
        <li>Creating smooth and uniform color transition and gradients</li>
        </ul>
        <p>A linear Oklab color is represented internally by an array of four
        components:</p>
        <ul>
        <li>lightness (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>a (<a href="/docs/reference/foundations/float/" title="`float`"><code>float</code></a> or <a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>.
        Ratios are relative to <code><span class="typ-num">0.4</span></code>; meaning <code><span class="typ-num">50%</span></code> is equal to <code><span class="typ-num">0.2</span></code>)</li>
        <li>b (<a href="/docs/reference/foundations/float/" title="`float`"><code>float</code></a> or <a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>.
        Ratios are relative to <code><span class="typ-num">0.4</span></code>; meaning <code><span class="typ-num">50%</span></code> is equal to <code><span class="typ-num">0.2</span></code>)</li>
        <li>alpha (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        </ul>
        <p>These components are also available using the
        <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
          fill<span class="typ-punct">:</span> <span class="typ-func">oklab</span><span class="typ-punct">(</span><span class="typ-num">27%</span><span class="typ-punct">,</span> <span class="typ-num">20%</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/e8652fd85f8b296cd86c63e686e10fe7.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: lightness
        details: <p>The lightness component.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: a
        details: <p>The a (&quot;green/red&quot;) component.</p>
        example: null
        types:
        - float
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: b
        details: <p>The b (&quot;blue/yellow&quot;) component.</p>
        example: null
        types:
        - float
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: alpha
        details: <p>The alpha component.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: color
        details: |-
          <p>Alternatively: The color to convert to Oklab.</p>
          <p>If this is given, the individual components should not be given.</p>
        example: null
        types:
        - color
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: oklch
      title: Oklch
      keywords: []
      oneliner: Create an [Oklch](https://bottosson.github.io/posts/oklab/) color.
      element: false
      contextual: false
      details: |-
        <p>Create an <a href="https://bottosson.github.io/posts/oklab/">Oklch</a> color.</p>
        <p>This color space is well suited for the following use cases:</p>
        <ul>
        <li>Color manipulation involving lightness, chroma, and hue</li>
        <li>Creating grayscale images with uniform perceived lightness</li>
        <li>Creating smooth and uniform color transition and gradients</li>
        </ul>
        <p>A linear Oklch color is represented internally by an array of four
        components:</p>
        <ul>
        <li>lightness (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>chroma (<a href="/docs/reference/foundations/float/" title="`float`"><code>float</code></a> or <a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>.
        Ratios are relative to <code><span class="typ-num">0.4</span></code>; meaning <code><span class="typ-num">50%</span></code> is equal to <code><span class="typ-num">0.2</span></code>)</li>
        <li>hue (<a href="/docs/reference/layout/angle/" title="`angle`"><code>angle</code></a>)</li>
        <li>alpha (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        </ul>
        <p>These components are also available using the
        <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
          fill<span class="typ-punct">:</span> <span class="typ-func">oklch</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">,</span> <span class="typ-num">0.2</span><span class="typ-punct">,</span> <span class="typ-num">160deg</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/7ef0f0c309ae2433748bdc9b973e0a4d.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: lightness
        details: <p>The lightness component.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: chroma
        details: <p>The chroma component.</p>
        example: null
        types:
        - float
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: hue
        details: <p>The hue component.</p>
        example: null
        types:
        - angle
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: alpha
        details: <p>The alpha component.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: color
        details: |-
          <p>Alternatively: The color to convert to Oklch.</p>
          <p>If this is given, the individual components should not be given.</p>
        example: null
        types:
        - color
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: linear-rgb
      title: Linear RGB
      keywords: []
      oneliner: Create an RGB(A) color with linear luma.
      element: false
      contextual: false
      details: |-
        <p>Create an RGB(A) color with linear luma.</p>
        <p>This color space is similar to sRGB, but with the distinction that the
        color component are not gamma corrected. This makes it easier to perform
        color operations such as blending and interpolation. Although, you
        should prefer to use the <a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code> function</a> for these.</p>
        <p>A linear RGB(A) color is represented internally by an array of four
        components:</p>
        <ul>
        <li>red (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>green (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>blue (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>alpha (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        </ul>
        <p>These components are also available using the
        <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">linear-rgb</span><span class="typ-punct">(</span>
          <span class="typ-num">30%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">10%</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/b1587bce8c3dce634ea8cd5c5eb8b60d.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: red
        details: <p>The red component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: green
        details: <p>The green component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: blue
        details: <p>The blue component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: alpha
        details: <p>The alpha component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: color
        details: |-
          <p>Alternatively: The color to convert to linear RGB(A).</p>
          <p>If this is given, the individual components should not be given.</p>
        example: null
        types:
        - color
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: rgb
      title: RGB
      keywords: []
      oneliner: Create an RGB(A) color.
      element: false
      contextual: false
      details: |-
        <p>Create an RGB(A) color.</p>
        <p>The color is specified in the sRGB color space.</p>
        <p>An RGB(A) color is represented internally by an array of four components:</p>
        <ul>
        <li>red (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>green (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>blue (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>alpha (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        </ul>
        <p>These components are also available using the <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a>
        method.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#b1f2eb&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-num">87</span><span class="typ-punct">,</span> <span class="typ-num">127</span><span class="typ-punct">,</span> <span class="typ-num">230</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-num">25%</span><span class="typ-punct">,</span> <span class="typ-num">13%</span><span class="typ-punct">,</span> <span class="typ-num">65%</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/1bc56d7aeef07e0435d66371387f13c0.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: red
        details: <p>The red component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: green
        details: <p>The green component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: blue
        details: <p>The blue component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: alpha
        details: <p>The alpha component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: hex
        details: |-
          <p>Alternatively: The color in hexadecimal notation.</p>
          <p>Accepts three, four, six or eight hexadecimal digits and optionally
          a leading hash.</p>
          <p>If this is given, the individual components should not be given.</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">16pt</span><span class="typ-punct">,</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#239dad&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
            <span class="typ-strong">*Typst*</span>
          <span class="typ-punct">]</span>
          </code></pre><div class="preview"><img src="/assets/docs/4f6b86b72e34b44e39e85fd847f3421b.png" alt="Preview" width="480" height="190"/></div></div>
        types:
        - str
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: color
        details: |-
          <p>Alternatively: The color to convert to RGB(a).</p>
          <p>If this is given, the individual components should not be given.</p>
        example: null
        types:
        - color
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: cmyk
      title: CMYK
      keywords: []
      oneliner: Create a CMYK color.
      element: false
      contextual: false
      details: |-
        <p>Create a CMYK color.</p>
        <p>This is useful if you want to target a specific printer. The conversion
        to RGB for display preview might differ from how your printer reproduces
        the color.</p>
        <p>A CMYK color is represented internally by an array of four components:</p>
        <ul>
        <li>cyan (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>magenta (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>yellow (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>key (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        </ul>
        <p>These components are also available using the
        <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
          fill<span class="typ-punct">:</span> <span class="typ-func">cmyk</span><span class="typ-punct">(</span><span class="typ-num">27%</span><span class="typ-punct">,</span> <span class="typ-num">0%</span><span class="typ-punct">,</span> <span class="typ-num">3%</span><span class="typ-punct">,</span> <span class="typ-num">5%</span><span class="typ-punct">)</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/ba913143dfc94a799bdaec785400b707.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: cyan
        details: <p>The cyan component.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: magenta
        details: <p>The magenta component.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: yellow
        details: <p>The yellow component.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: key
        details: <p>The key component.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: color
        details: |-
          <p>Alternatively: The color to convert to CMYK.</p>
          <p>If this is given, the individual components should not be given.</p>
        example: null
        types:
        - color
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: hsl
      title: HSL
      keywords: []
      oneliner: Create an HSL color.
      element: false
      contextual: false
      details: |-
        <p>Create an HSL color.</p>
        <p>This color space is useful for specifying colors by hue, saturation and
        lightness. It is also useful for color manipulation, such as saturating
        while keeping perceived hue.</p>
        <p>An HSL color is represented internally by an array of four components:</p>
        <ul>
        <li>hue (<a href="/docs/reference/layout/angle/" title="`angle`"><code>angle</code></a>)</li>
        <li>saturation (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>lightness (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>alpha (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        </ul>
        <p>These components are also available using the
        <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
          fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">hsl</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">60%</span><span class="typ-punct">)</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/8f749c3ddf5a03313e9c0e88db636802.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: hue
        details: <p>The hue angle.</p>
        example: null
        types:
        - angle
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: saturation
        details: <p>The saturation component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: lightness
        details: <p>The lightness component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: alpha
        details: <p>The alpha component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: color
        details: |-
          <p>Alternatively: The color to convert to HSL.</p>
          <p>If this is given, the individual components should not be given.</p>
        example: null
        types:
        - color
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: hsv
      title: HSV
      keywords: []
      oneliner: Create an HSV color.
      element: false
      contextual: false
      details: |-
        <p>Create an HSV color.</p>
        <p>This color space is useful for specifying colors by hue, saturation and
        value. It is also useful for color manipulation, such as saturating
        while keeping perceived hue.</p>
        <p>An HSV color is represented internally by an array of four components:</p>
        <ul>
        <li>hue (<a href="/docs/reference/layout/angle/" title="`angle`"><code>angle</code></a>)</li>
        <li>saturation (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>value (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        <li>alpha (<a href="/docs/reference/layout/ratio/" title="`ratio`"><code>ratio</code></a>)</li>
        </ul>
        <p>These components are also available using the
        <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
          fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">hsv</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">60%</span><span class="typ-punct">)</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/ec9ddda43d074d38554f5485722219db.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: hue
        details: <p>The hue angle.</p>
        example: null
        types:
        - angle
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: saturation
        details: <p>The saturation component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: value
        details: <p>The value component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: alpha
        details: <p>The alpha component.</p>
        example: null
        types:
        - int
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: color
        details: |-
          <p>Alternatively: The color to convert to HSL.</p>
          <p>If this is given, the individual components should not be given.</p>
        example: null
        types:
        - color
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: components
      title: Components
      keywords: []
      oneliner: Extracts the components of this color.
      element: false
      contextual: false
      details: |-
        <p>Extracts the components of this color.</p>
        <p>The size and values of this array depends on the color space. You can
        obtain the color space using <a href="/docs/reference/visualize/color/#definitions-space"><code>space</code></a>. Below is a table
        of the color spaces and their components:</p>
        <table><thead><tr><th>Color space</th><th>C1</th><th>C2</th><th>C3</th><th>C4</th></tr></thead><tbody>
        <tr><td><a href="/docs/reference/visualize/color/#definitions-luma"><code>luma</code></a></td><td>Lightness</td><td></td><td></td><td></td></tr>
        <tr><td><a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code></a></td><td>Lightness</td><td><code>a</code></td><td><code>b</code></td><td>Alpha</td></tr>
        <tr><td><a href="/docs/reference/visualize/color/#definitions-oklch"><code>oklch</code></a></td><td>Lightness</td><td>Chroma</td><td>Hue</td><td>Alpha</td></tr>
        <tr><td><a href="/docs/reference/visualize/color/#definitions-linear-rgb"><code>linear-rgb</code></a></td><td>Red</td><td>Green</td><td>Blue</td><td>Alpha</td></tr>
        <tr><td><a href="/docs/reference/visualize/color/#definitions-rgb"><code>rgb</code></a></td><td>Red</td><td>Green</td><td>Blue</td><td>Alpha</td></tr>
        <tr><td><a href="/docs/reference/visualize/color/#definitions-cmyk"><code>cmyk</code></a></td><td>Cyan</td><td>Magenta</td><td>Yellow</td><td>Key</td></tr>
        <tr><td><a href="/docs/reference/visualize/color/#definitions-hsl"><code>hsl</code></a></td><td>Hue</td><td>Saturation</td><td>Lightness</td><td>Alpha</td></tr>
        <tr><td><a href="/docs/reference/visualize/color/#definitions-hsv"><code>hsv</code></a></td><td>Hue</td><td>Saturation</td><td>Value</td><td>Alpha</td></tr>
        </tbody></table>
        <p>For the meaning and type of each individual value, see the documentation
        of the corresponding color space. The alpha component is optional and
        only included if the <code>alpha</code> argument is <code>true</code>. The length of the
        returned array depends on the number of components and whether the alpha
        component is included.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-comment">// note that the alpha component is included by default</span>
        <span class="typ-func">#</span><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">,</span> <span class="typ-num">60%</span><span class="typ-punct">,</span> <span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">components</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/43a9b4ace8d343e07ec2b841211eace5.png" alt="Preview" width="480" height="190"/></div></div>
      self: true
      params:
      - name: alpha
        details: <p>Whether to include the alpha component.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: false
      returns:
      - array
      scope: []
    - path:
      - color
      name: space
      title: Space
      keywords: []
      oneliner: 'Returns the constructor function for this color''s space:'
      element: false
      contextual: false
      details: |-
        <p>Returns the constructor function for this color's space:</p>
        <ul>
        <li><a href="/docs/reference/visualize/color/#definitions-luma"><code>luma</code></a></li>
        <li><a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code></a></li>
        <li><a href="/docs/reference/visualize/color/#definitions-oklch"><code>oklch</code></a></li>
        <li><a href="/docs/reference/visualize/color/#definitions-linear-rgb"><code>linear-rgb</code></a></li>
        <li><a href="/docs/reference/visualize/color/#definitions-rgb"><code>rgb</code></a></li>
        <li><a href="/docs/reference/visualize/color/#definitions-cmyk"><code>cmyk</code></a></li>
        <li><a href="/docs/reference/visualize/color/#definitions-hsl"><code>hsl</code></a></li>
        <li><a href="/docs/reference/visualize/color/#definitions-hsv"><code>hsv</code></a></li>
        </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> color <span class="typ-op">=</span> <span class="typ-func">cmyk</span><span class="typ-punct">(</span><span class="typ-num">1%</span><span class="typ-punct">,</span> <span class="typ-num">2%</span><span class="typ-punct">,</span> <span class="typ-num">3%</span><span class="typ-punct">,</span> <span class="typ-num">4%</span><span class="typ-punct">)</span>
        <span class="typ-punct">#</span><span class="typ-punct">(</span>color<span class="typ-punct">.</span><span class="typ-func">space</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">==</span> cmyk<span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/894dcb2783141d3c088be0f7801ac62c.png" alt="Preview" width="480" height="190"/></div></div>
      self: true
      params: []
      returns:
      - any
      scope: []
    - path:
      - color
      name: to-hex
      title: To Hex
      keywords: []
      oneliner: Returns the color's RGB(A) hex representation (such as `#ffaa32` or
      element: false
      contextual: false
      details: |-
        <p>Returns the color's RGB(A) hex representation (such as <code>#ffaa32</code> or
        <code>#020304fe</code>). The alpha component (last two digits in <code>#020304fe</code>) is
        omitted if it is equal to <code>ff</code> (255 / 100%).</p>
      example: null
      self: true
      params: []
      returns:
      - str
      scope: []
    - path:
      - color
      name: lighten
      title: Lighten
      keywords: []
      oneliner: Lightens a color by a given factor.
      element: false
      contextual: false
      details: <p>Lightens a color by a given factor.</p>
      example: null
      self: true
      params:
      - name: factor
        details: <p>The factor to lighten the color by.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: darken
      title: Darken
      keywords: []
      oneliner: Darkens a color by a given factor.
      element: false
      contextual: false
      details: <p>Darkens a color by a given factor.</p>
      example: null
      self: true
      params:
      - name: factor
        details: <p>The factor to darken the color by.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: saturate
      title: Saturate
      keywords: []
      oneliner: Increases the saturation of a color by a given factor.
      element: false
      contextual: false
      details: <p>Increases the saturation of a color by a given factor.</p>
      example: null
      self: true
      params:
      - name: factor
        details: <p>The factor to saturate the color by.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: desaturate
      title: Desaturate
      keywords: []
      oneliner: Decreases the saturation of a color by a given factor.
      element: false
      contextual: false
      details: <p>Decreases the saturation of a color by a given factor.</p>
      example: null
      self: true
      params:
      - name: factor
        details: <p>The factor to desaturate the color by.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: negate
      title: Negate
      keywords: []
      oneliner: Produces the complementary color using a provided color space.
      element: false
      contextual: false
      details: |-
        <p>Produces the complementary color using a provided color space.
        You can think of it as the opposite side on a color wheel.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> yellow<span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> yellow<span class="typ-punct">.</span><span class="typ-func">negate</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> yellow<span class="typ-punct">.</span><span class="typ-func">negate</span><span class="typ-punct">(</span>space<span class="typ-punct">:</span> rgb<span class="typ-punct">)</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/c5a504a60de2ba1432400efa9cd96d1e.png" alt="Preview" width="480" height="190"/></div></div>
      self: true
      params:
      - name: space
        details: <p>The color space used for the transformation. By default, a perceptual
          color space is used.</p>
        example: null
        types:
        - any
        strings: []
        default: <code>oklab</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: rotate
      title: Rotate
      keywords: []
      oneliner: Rotates the hue of the color by a given angle.
      element: false
      contextual: false
      details: <p>Rotates the hue of the color by a given angle.</p>
      example: null
      self: true
      params:
      - name: angle
        details: <p>The angle to rotate the hue by.</p>
        example: null
        types:
        - angle
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: space
        details: |-
          <p>The color space used to rotate. By default, this happens in a perceptual
          color space (<a href="/docs/reference/visualize/color/#definitions-oklch"><code>oklch</code></a>).</p>
        example: null
        types:
        - any
        strings: []
        default: <code>oklch</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: mix
      title: Mix
      keywords: []
      oneliner: Create a color by mixing two or more colors.
      element: false
      contextual: false
      details: |-
        <p>Create a color by mixing two or more colors.</p>
        <p>In color spaces with a hue component (hsl, hsv, oklch), only two colors
        can be mixed at once. Mixing more than two colors in such a space will
        result in an error!</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">.</span><span class="typ-func">mix</span><span class="typ-punct">(</span>blue<span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">.</span><span class="typ-func">mix</span><span class="typ-punct">(</span>blue<span class="typ-punct">,</span> space<span class="typ-punct">:</span> rgb<span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">mix</span><span class="typ-punct">(</span>red<span class="typ-punct">,</span> blue<span class="typ-punct">,</span> white<span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">mix</span><span class="typ-punct">(</span><span class="typ-punct">(</span>red<span class="typ-punct">,</span> <span class="typ-num">70%</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span>blue<span class="typ-punct">,</span> <span class="typ-num">30%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/978e3523abe474a41bb3a8404b875593.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: colors
        details: |-
          <p>The colors, optionally with weights, specified as a pair (array of
          length two) of color and weight (float or ratio).</p>
          <p>The weights do not need to add to <code><span class="typ-num">100%</span></code>, they are relative to the
          sum of all weights.</p>
        example: null
        types:
        - color
        - array
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      - name: space
        details: |-
          <p>The color space to mix in. By default, this happens in a perceptual
          color space (<a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code></a>).</p>
        example: null
        types:
        - any
        strings: []
        default: <code>oklab</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: transparentize
      title: Transparentize
      keywords: []
      oneliner: Makes a color more transparent by a given factor.
      element: false
      contextual: false
      details: |-
        <p>Makes a color more transparent by a given factor.</p>
        <p>This method is relative to the existing alpha value.
        If the scale is positive, calculates <code>alpha - alpha * scale</code>.
        Negative scales behave like <code>color.opacify(-scale)</code>.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">)</span><span class="typ-punct">[</span>opaque<span class="typ-punct">]</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">.</span><span class="typ-func">transparentize</span><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>half red<span class="typ-punct">]</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">.</span><span class="typ-func">transparentize</span><span class="typ-punct">(</span><span class="typ-num">75%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>quarter red<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/50f36ba47d4fc9bfab94e835d6f5cc77.png" alt="Preview" width="480" height="190"/></div></div>
      self: true
      params:
      - name: scale
        details: <p>The factor to change the alpha value by.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
    - path:
      - color
      name: opacify
      title: Opacify
      keywords: []
      oneliner: Makes a color more opaque by a given scale.
      element: false
      contextual: false
      details: |-
        <p>Makes a color more opaque by a given scale.</p>
        <p>This method is relative to the existing alpha value.
        If the scale is positive, calculates <code>alpha + scale - alpha * scale</code>.
        Negative scales behave like <code>color.transparentize(-scale)</code>.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> half-red <span class="typ-op">=</span> red<span class="typ-punct">.</span><span class="typ-func">transparentize</span><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> half-red<span class="typ-punct">.</span><span class="typ-func">opacify</span><span class="typ-punct">(</span><span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>opaque<span class="typ-punct">]</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> half-red<span class="typ-punct">.</span><span class="typ-func">opacify</span><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>three quarters red<span class="typ-punct">]</span>
        <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> half-red<span class="typ-punct">.</span><span class="typ-func">opacify</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">50%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>one quarter red<span class="typ-punct">]</span>
        </code></pre><div class="preview"><img src="/assets/docs/91170e321308a99ae59cbe3fe5cd895a.png" alt="Preview" width="480" height="190"/></div></div>
      self: true
      params:
      - name: scale
        details: <p>The scale to change the alpha value by.</p>
        example: null
        types:
        - ratio
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      returns:
      - color
      scope: []
children: []
