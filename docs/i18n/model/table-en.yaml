route: /docs/reference/model/table/
title: Table
description: Documentation for the `table` function.
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-columns
    name: columns
    children: []
  - id: parameters-rows
    name: rows
    children: []
  - id: parameters-gutter
    name: gutter
    children: []
  - id: parameters-column-gutter
    name: column-gutter
    children: []
  - id: parameters-row-gutter
    name: row-gutter
    children: []
  - id: parameters-fill
    name: fill
    children: []
  - id: parameters-align
    name: align
    children: []
  - id: parameters-stroke
    name: stroke
    children: []
  - id: parameters-inset
    name: inset
    children: []
  - id: parameters-children
    name: children
    children: []
- id: definitions
  name: Definitions
  children:
  - id: definitions-cell
    name: Table Cell
    children:
    - id: definitions-cell-body
      name: body
      children: []
    - id: definitions-cell-x
      name: x
      children: []
    - id: definitions-cell-y
      name: y
      children: []
    - id: definitions-cell-colspan
      name: colspan
      children: []
    - id: definitions-cell-rowspan
      name: rowspan
      children: []
    - id: definitions-cell-fill
      name: fill
      children: []
    - id: definitions-cell-align
      name: align
      children: []
    - id: definitions-cell-inset
      name: inset
      children: []
    - id: definitions-cell-stroke
      name: stroke
      children: []
    - id: definitions-cell-breakable
      name: breakable
      children: []
  - id: definitions-hline
    name: Table Horizontal Line
    children:
    - id: definitions-hline-y
      name: y
      children: []
    - id: definitions-hline-start
      name: start
      children: []
    - id: definitions-hline-end
      name: end
      children: []
    - id: definitions-hline-stroke
      name: stroke
      children: []
    - id: definitions-hline-position
      name: position
      children: []
  - id: definitions-vline
    name: Table Vertical Line
    children:
    - id: definitions-vline-x
      name: x
      children: []
    - id: definitions-vline-start
      name: start
      children: []
    - id: definitions-vline-end
      name: end
      children: []
    - id: definitions-vline-stroke
      name: stroke
      children: []
    - id: definitions-vline-position
      name: position
      children: []
  - id: definitions-header
    name: Table Header
    children:
    - id: definitions-header-repeat
      name: repeat
      children: []
    - id: definitions-header-children
      name: children
      children: []
  - id: definitions-footer
    name: Table Footer
    children:
    - id: definitions-footer-repeat
      name: repeat
      children: []
    - id: definitions-footer-children
      name: children
      children: []
body:
  kind: func
  content:
    path: []
    name: table
    title: Table
    keywords: []
    oneliner: A table of items.
    element: true
    contextual: false
    details: |-
      <p>A table of items.</p>
      <p>Tables are used to arrange content in cells. Cells can contain arbitrary
      content, including multiple paragraphs and are specified in row-major order.
      For a hands-on explanation of all the ways you can use and customize tables
      in Typst, check out the <a href="/docs/guides/table-guide/">table guide</a>.</p>
      <p>Because tables are just grids with different defaults for some cell
      properties (notably <code>stroke</code> and <code>inset</code>), refer to the <a href="/docs/reference/layout/grid/">grid
      documentation</a> for more information on how to size the table tracks
      and specify the cell appearance properties.</p>
      <p>If you are unsure whether you should be using a table or a grid, consider
      whether the content you are arranging semantically belongs together as a set
      of related data points or similar or whether you are just want to enhance
      your presentation by arranging unrelated content in a grid. In the former
      case, a table is the right choice, while in the latter case, a grid is more
      appropriate. Furthermore, Typst will annotate its output in the future such
      that screenreaders will annouce content in <code>table</code> as tabular while a grid's
      content will be announced no different than multiple content blocks in the
      document flow.</p>
      <p>Note that, to override a particular cell's properties or apply show rules on
      table cells, you can use the <a href="/docs/reference/model/table/#definitions-cell"><code>table.cell</code></a> element. See its
      documentation for more information.</p>
      <p>Although the <code>table</code> and the <code>grid</code> share most properties, set and show
      rules on one of them do not affect the other.</p>
      <p>To give a table a caption and make it <a href="/docs/reference/model/ref/">referenceable</a>, put it into a
      <a href="/docs/reference/model/figure/" title="figure">figure</a>.</p>
      <h2 id="example">Example</h2>
      <p>The example below demonstrates some of the most common table options.</p>
      <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
        columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
        align<span class="typ-punct">:</span> horizon<span class="typ-punct">,</span>
        table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>
          <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Area*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Parameters*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;cylinder.svg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-math-delim">$</span> <span class="typ-pol">pi</span> h <span class="typ-punct">(</span>D<span class="typ-math-op">^</span>2 <span class="typ-escape">-</span> d<span class="typ-math-op">^</span>2<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 4 <span class="typ-math-delim">$</span><span class="typ-punct">,</span>
        <span class="typ-punct">[</span>
          <span class="typ-math-delim">$</span>h<span class="typ-math-delim">$</span>: height <span class="typ-escape">\</span>
          <span class="typ-math-delim">$</span>D<span class="typ-math-delim">$</span>: outer radius <span class="typ-escape">\</span>
          <span class="typ-math-delim">$</span>d<span class="typ-math-delim">$</span>: inner radius
        <span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tetrahedron.svg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-math-delim">$</span> <span class="typ-func">sqrt</span><span class="typ-punct">(</span>2<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 12 a<span class="typ-math-op">^</span>3 <span class="typ-math-delim">$</span><span class="typ-punct">,</span>
        <span class="typ-punct">[</span><span class="typ-math-delim">$</span>a<span class="typ-math-delim">$</span>: edge length<span class="typ-punct">]</span>
      <span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/291ffba835d6b37da3942ed85abc7ad5.png" alt="Preview" width="480" height="190"/></div></div>
      <p>Much like with grids, you can use <a href="/docs/reference/model/table/#definitions-cell"><code>table.cell</code></a> to customize
      the appearance and the position of each cell.</p>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>
        stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>
        gutter<span class="typ-punct">:</span> <span class="typ-num">0.2em</span><span class="typ-punct">,</span>
        fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
          <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">or</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> gray <span class="typ-punct">}</span><span class="typ-punct">,</span>
        inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>right<span class="typ-punct">:</span> <span class="typ-num">1.5em</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
      <span class="typ-punct">)</span>

      <span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
        <span class="typ-key">if</span> it<span class="typ-punct">.</span>x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">or</span> it<span class="typ-punct">.</span>y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span>
          <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>white<span class="typ-punct">)</span>
          <span class="typ-func">strong</span><span class="typ-punct">(</span>it<span class="typ-punct">)</span>
        <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-key">if</span> it<span class="typ-punct">.</span>body <span class="typ-op">==</span> <span class="typ-punct">[</span><span class="typ-punct">]</span> <span class="typ-punct">{</span>
          <span class="typ-comment">// Replace empty cells with &#39;N/A&#39;</span>
          <span class="typ-func">pad</span><span class="typ-punct">(</span><span class="typ-op">..</span>it<span class="typ-punct">.</span>inset<span class="typ-punct">)</span><span class="typ-punct">[</span><span class="typ-emph">_N/A_</span><span class="typ-punct">]</span>
        <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
          it
        <span class="typ-punct">}</span>
      <span class="typ-punct">}</span>

      <span class="typ-key">#</span><span class="typ-key">let</span> a <span class="typ-op">=</span> table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>
        fill<span class="typ-punct">:</span> green<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">60%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
      <span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span>
      <span class="typ-key">#</span><span class="typ-key">let</span> b <span class="typ-op">=</span> table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>
        fill<span class="typ-punct">:</span> aqua<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">60%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
      <span class="typ-punct">)</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span>

      <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
        columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
        <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Exam 1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Exam 2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Exam 3<span class="typ-punct">]</span><span class="typ-punct">,</span>

        <span class="typ-punct">[</span>John<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> a<span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">[</span>Mary<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> a<span class="typ-punct">,</span> a<span class="typ-punct">,</span>
        <span class="typ-punct">[</span>Robert<span class="typ-punct">]</span><span class="typ-punct">,</span> b<span class="typ-punct">,</span> a<span class="typ-punct">,</span> b<span class="typ-punct">,</span>
      <span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/6ee115de51dd55921e5c86fdd60f9308.png" alt="Preview" width="480" height="190"/></div></div>
    example: null
    self: false
    params:
    - name: columns
      details: |-
        <p>The column sizes. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for more
        information on track sizing.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: rows
      details: |-
        <p>The row sizes. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for more information
        on track sizing.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: gutter
      details: |-
        <p>The gaps between rows and columns. See the <a href="/docs/reference/layout/grid/">grid documentation</a>
        for more information on gutters.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: column-gutter
      details: |-
        <p>The gaps between columns. Takes precedence over <code>gutter</code>. See the
        <a href="/docs/reference/layout/grid/">grid documentation</a> for more information on gutters.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: row-gutter
      details: |-
        <p>The gaps between rows. Takes precedence over <code>gutter</code>. See the
        <a href="/docs/reference/layout/grid/">grid documentation</a> for more information on gutters.</p>
      example: null
      types:
      - auto
      - int
      - relative
      - fraction
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: fill
      details: |-
        <p>How to fill the cells.</p>
        <p>This can be a color or a function that returns a color. The function
        receives the cells' column and row indices, starting from zero. This can
        be used to implement striped tables.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> _<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
            <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">240</span><span class="typ-punct">)</span> <span class="typ-punct">}</span>
            <span class="typ-key">else</span> <span class="typ-punct">{</span> white <span class="typ-punct">}</span><span class="typ-punct">,</span>
          align<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
            <span class="typ-key">if</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> center <span class="typ-punct">}</span>
            <span class="typ-key">else</span> <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> left <span class="typ-punct">}</span>
            <span class="typ-key">else</span> <span class="typ-punct">{</span> right <span class="typ-punct">}</span><span class="typ-punct">,</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q1*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q2*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q3*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Revenue:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>2000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>3000 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Expenses:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>500 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1500 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Profit:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>500 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1500 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/5caff4e56ac567f3a0afe9bd99c0e0c8.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - none
      - color
      - gradient
      - array
      - pattern
      - function
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: align
      details: |-
        <p>How to align the cells' content.</p>
        <p>This can either be a single alignment, an array of alignments
        (corresponding to each column) or a function that returns an alignment.
        The function receives the cells' column and row indices, starting from
        zero. If set to <code><span class="typ-key">auto</span></code>, the outer alignment is used.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
          align<span class="typ-punct">:</span> <span class="typ-punct">(</span>left<span class="typ-punct">,</span> center<span class="typ-punct">,</span> right<span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>C<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/5751df9a4dd055b8933a7905f55fde63.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - auto
      - array
      - alignment
      - function
      strings: []
      default: <code><span class="typ-key">auto</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: stroke
      details: |-
        <p>How to <a href="/docs/reference/visualize/stroke/" title="stroke">stroke</a> the cells.</p>
        <p>Strokes can be disabled by setting this to <code><span class="typ-key">none</span></code>.</p>
        <p>If it is necessary to place lines which can cross spacing between cells
        produced by the <code>gutter</code> option, or to override the stroke between
        multiple specific cells, consider specifying one or more of
        <a href="/docs/reference/model/table/#definitions-hline"><code>table.hline</code></a> and <a href="/docs/reference/model/table/#definitions-vline"><code>table.vline</code></a>
        alongside your table cells.</p>
        <p>See the <a href="/docs/reference/layout/grid/#parameters-stroke">grid documentation</a> for more information on
        strokes.</p>
      example: null
      types:
      - none
      - length
      - color
      - gradient
      - array
      - stroke
      - pattern
      - dictionary
      - function
      strings: []
      default: <code><span class="typ-num">1pt</span> <span class="typ-op">+</span>
        black</code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: inset
      details: <p>How much to pad the cells' content.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>World<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
          inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>
            x<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
            y<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>World<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/51ec900d498b539d860dbaed5df278b1.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - relative
      - array
      - dictionary
      - function
      strings: []
      default: <code><span class="typ-num">5pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: children
      details: |-
        <p>The contents of the table cells, plus any extra table lines specified
        with the <a href="/docs/reference/model/table/#definitions-hline"><code>table.hline</code></a> and
        <a href="/docs/reference/model/table/#definitions-vline"><code>table.vline</code></a> elements.</p>
      example: null
      types:
      - content
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: true
      settable: false
    returns:
    - content
    scope:
    - path:
      - table
      name: cell
      title: Table Cell
      keywords: []
      oneliner: A cell in the table. Use this to position a cell manually or to apply
      element: true
      contextual: false
      details: |-
        <p>A cell in the table. Use this to position a cell manually or to apply
        styling. To do the latter, you can either use the function to override the
        properties for a particular cell, or use it in show rules to apply certain
        styles to multiple cells at once.</p>
        <p>Perhaps the most important use case of <code>table<span class="typ-punct">.</span>cell</code> is to make a cell span
        multiple columns and/or rows with the <code>colspan</code> and <code>rowspan</code> fields.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
          table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>
            <span class="typ-punct">[</span>Substance<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Subcritical °C<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Supercritical °C<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Hydrochloric Acid<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>12.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>92.1<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Sodium Myreth Sulfate<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>16.6<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>104<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Potassium Hydroxide<span class="typ-punct">]</span><span class="typ-punct">,</span>
          table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>colspan<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>24.7<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/fe2170650b3ad4cae5e69b85359932ef.png" alt="Preview" width="480" height="190"/></div></div>
        <p>For example, you can override the fill, alignment or inset for a single
        cell:</p>
        <div class="previewed-code"><pre><code><span class="typ-comment">// You can also import those.</span>
        <span class="typ-key">#</span><span class="typ-key">import</span> table<span class="typ-punct">:</span> cell<span class="typ-punct">,</span> header

        <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
          align<span class="typ-punct">:</span> center<span class="typ-punct">,</span>
          <span class="typ-func">header</span><span class="typ-punct">(</span>
            <span class="typ-punct">[</span><span class="typ-strong">*Trip progress*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span><span class="typ-strong">*Itinerary*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-func">cell</span><span class="typ-punct">(</span>
            align<span class="typ-punct">:</span> right<span class="typ-punct">,</span>
            fill<span class="typ-punct">:</span> fuchsia<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>🚗<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Get in, folks!<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>🚗<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Eat curbside hotdog<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-func">cell</span><span class="typ-punct">(</span>align<span class="typ-punct">:</span> left<span class="typ-punct">)</span><span class="typ-punct">[</span>🌴🚗<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-func">cell</span><span class="typ-punct">(</span>
            inset<span class="typ-punct">:</span> <span class="typ-num">0.06em</span><span class="typ-punct">,</span>
            <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">1.62em</span><span class="typ-punct">)</span><span class="typ-punct">[</span>🛖🌅🌊<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/9721910ca4683115d9c3f94b1ea66344.png" alt="Preview" width="480" height="190"/></div></div>
        <p>You may also apply a show rule on <code>table.cell</code> to style all cells at once.
        Combined with selectors, this allows you to apply styles based on a cell's
        position:</p>
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">strong</span>

        <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
          gutter<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Name<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Age<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Strength<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Hannes<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>36<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Grace<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Irma<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>50<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Resourcefulness<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Vikram<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>49<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Perseverance<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/bacfff05798c2dc10339427b5e5a04fe.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: body
        details: <p>The cell's body.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: x
        details: |-
          <p>The cell's column (zero-indexed).
          Functions identically to the <code>x</code> field in <a href="/docs/reference/layout/grid/#definitions-cell"><code>grid.cell</code></a>.</p>
        example: null
        types:
        - auto
        - int
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: y
        details: |-
          <p>The cell's row (zero-indexed).
          Functions identically to the <code>y</code> field in <a href="/docs/reference/layout/grid/#definitions-cell"><code>grid.cell</code></a>.</p>
        example: null
        types:
        - auto
        - int
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: colspan
        details: <p>The amount of columns spanned by this cell.</p>
        example: null
        types:
        - int
        strings: []
        default: <code><span class="typ-num">1</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: rowspan
        details: <p>The amount of rows spanned by this cell.</p>
        example: null
        types:
        - int
        strings: []
        default: <code><span class="typ-num">1</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: fill
        details: <p>The cell's <a href="/docs/reference/model/table/#parameters-fill">fill</a>
          override.</p>
        example: null
        types:
        - none
        - auto
        - color
        - gradient
        - pattern
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: align
        details: <p>The cell's <a href="/docs/reference/model/table/#parameters-align">alignment</a>
          override.</p>
        example: null
        types:
        - auto
        - alignment
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: inset
        details: <p>The cell's <a href="/docs/reference/model/table/#parameters-inset">inset</a>
          override.</p>
        example: null
        types:
        - auto
        - relative
        - dictionary
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: stroke
        details: <p>The cell's <a href="/docs/reference/model/table/#parameters-stroke">stroke</a>
          override.</p>
        example: null
        types:
        - none
        - length
        - color
        - gradient
        - stroke
        - pattern
        - dictionary
        strings: []
        default: <code><span class="typ-punct">(</span><span class="typ-punct">:</span><span
          class="typ-punct">)</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: breakable
        details: |-
          <p>Whether rows spanned by this cell can be placed in different pages.
          When equal to <code><span class="typ-key">auto</span></code>, a cell spanning only fixed-size rows is
          unbreakable, while a cell spanning at least one <code><span class="typ-key">auto</span></code>-sized row is
          breakable.</p>
        example: null
        types:
        - auto
        - bool
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
    - path:
      - table
      name: hline
      title: Table Horizontal Line
      keywords: []
      oneliner: A horizontal line in the table.
      element: true
      contextual: false
      details: |-
        <p>A horizontal line in the table.</p>
        <p>Overrides any per-cell stroke, including stroke specified through the
        table's <code>stroke</code> field. Can cross spacing between cells created through the
        table's <a href="/docs/reference/model/table/#parameters-column-gutter"><code>column-gutter</code></a> option.</p>
        <p>Use this function instead of the table's <code>stroke</code> field if you want to
        manually place a horizontal line at a specific position in a single table.
        Consider using <a href="/docs/reference/model/table/#parameters-stroke">table's <code>stroke</code></a> field or <a href="/docs/reference/model/table/#definitions-cell-stroke"><code>table.cell</code>'s
        <code>stroke</code></a> field instead if the line you want to place is
        part of all your tables' designs.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">.6pt</span><span class="typ-punct">)</span>

        <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>
          columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>09:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Badge pick up<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>09:45<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Opening Keynote<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>10:30<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Typst&#39;s Future<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>11:15<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Session: Good PRs<span class="typ-punct">]</span><span class="typ-punct">,</span>
          table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>start<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>Noon<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-emph">_Lunch break_</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
          table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>start<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>14:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Tracked Layout<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>15:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Automations<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>16:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Workshop: Tables<span class="typ-punct">]</span><span class="typ-punct">,</span>
          table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>19:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Day 1 Attendee Mixer<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/30e75ea855253693d540cc9028aad0cf.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: y
        details: |-
          <p>The row above which the horizontal line is placed (zero-indexed).
          Functions identically to the <code>y</code> field in <a href="/docs/reference/layout/grid/#definitions-hline-y"><code>grid.hline</code></a>.</p>
        example: null
        types:
        - auto
        - int
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: start
        details: <p>The column at which the horizontal line starts (zero-indexed,
          inclusive).</p>
        example: null
        types:
        - int
        strings: []
        default: <code><span class="typ-num">0</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: end
        details: |-
          <p>The column before which the horizontal line ends (zero-indexed,
          exclusive).</p>
        example: null
        types:
        - none
        - int
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: stroke
        details: |-
          <p>The line's stroke.</p>
          <p>Specifying <code><span class="typ-key">none</span></code> removes any lines previously placed across this
          line's range, including hlines or per-cell stroke below it.</p>
        example: null
        types:
        - none
        - length
        - color
        - gradient
        - stroke
        - pattern
        - dictionary
        strings: []
        default: <code><span class="typ-num">1pt</span> <span class="typ-op">+</span>
          black</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: position
        details: |-
          <p>The position at which the line is placed, given its row (<code>y</code>) - either
          <code>top</code> to draw above it or <code>bottom</code> to draw below it.</p>
          <p>This setting is only relevant when row gutter is enabled (and
          shouldn't be used otherwise - prefer just increasing the <code>y</code> field by
          one instead), since then the position below a row becomes different
          from the position above the next row due to the spacing between both.</p>
        example: null
        types:
        - alignment
        strings: []
        default: <code>top</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
    - path:
      - table
      name: vline
      title: Table Vertical Line
      keywords: []
      oneliner: A vertical line in the table. See the docs for [`grid.vline`]($grid.vline)
      element: true
      contextual: false
      details: |-
        <p>A vertical line in the table. See the docs for <a href="/docs/reference/layout/grid/#definitions-vline"><code>grid.vline</code></a>
        for more information regarding how to use this element's fields.</p>
        <p>Overrides any per-cell stroke, including stroke specified through the
        table's <code>stroke</code> field. Can cross spacing between cells created through the
        table's <a href="/docs/reference/model/table/#parameters-row-gutter"><code>row-gutter</code></a> option.</p>
        <p>Similar to <a href="/docs/reference/model/table/#definitions-hline"><code>table.hline</code></a>, use this function if you want to
        manually place a vertical line at a specific position in a single table and
        use the <a href="/docs/reference/model/table/#parameters-stroke">table's <code>stroke</code></a> field or <a href="/docs/reference/model/table/#definitions-cell-stroke"><code>table.cell</code>'s
        <code>stroke</code></a> field instead if the line you want to place is
        part of all your tables' designs.</p>
      example: null
      self: false
      params:
      - name: x
        details: |-
          <p>The column before which the horizontal line is placed (zero-indexed).
          Functions identically to the <code>x</code> field in <a href="/docs/reference/layout/grid/#definitions-vline"><code>grid.vline</code></a>.</p>
        example: null
        types:
        - auto
        - int
        strings: []
        default: <code><span class="typ-key">auto</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: start
        details: <p>The row at which the vertical line starts (zero-indexed, inclusive).</p>
        example: null
        types:
        - int
        strings: []
        default: <code><span class="typ-num">0</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: end
        details: |-
          <p>The row on top of which the vertical line ends (zero-indexed,
          exclusive).</p>
        example: null
        types:
        - none
        - int
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: stroke
        details: |-
          <p>The line's stroke.</p>
          <p>Specifying <code><span class="typ-key">none</span></code> removes any lines previously placed across this
          line's range, including vlines or per-cell stroke below it.</p>
        example: null
        types:
        - none
        - length
        - color
        - gradient
        - stroke
        - pattern
        - dictionary
        strings: []
        default: <code><span class="typ-num">1pt</span> <span class="typ-op">+</span>
          black</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: position
        details: |-
          <p>The position at which the line is placed, given its column (<code>x</code>) -
          either <code>start</code> to draw before it or <code>end</code> to draw after it.</p>
          <p>The values <code>left</code> and <code>right</code> are also accepted, but discouraged as
          they cause your table to be inconsistent between left-to-right and
          right-to-left documents.</p>
          <p>This setting is only relevant when column gutter is enabled (and
          shouldn't be used otherwise - prefer just increasing the <code>x</code> field by
          one instead), since then the position after a column becomes different
          from the position before the next column due to the spacing between
          both.</p>
        example: null
        types:
        - alignment
        strings: []
        default: <code>start</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      returns:
      - content
      scope: []
    - path:
      - table
      name: header
      title: Table Header
      keywords: []
      oneliner: A repeatable table header.
      element: true
      contextual: false
      details: |-
        <p>A repeatable table header.</p>
        <p>You should wrap your tables' heading rows in this function even if you do not
        plan to wrap your table across pages because Typst will use this function to
        attach accessibility metadata to tables in the future and ensure universal
        access to your document.</p>
        <p>You can use the <code>repeat</code> parameter to control whether your table's header
        will be repeated across pages.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">11.5em</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>
          fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
            <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">or</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span>
              gray<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">)</span>
            <span class="typ-punct">}</span><span class="typ-punct">,</span>
          align<span class="typ-punct">:</span> right<span class="typ-punct">,</span>
        <span class="typ-punct">)</span>

        <span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">strong</span>
        <span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">strong</span>

        <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
          columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
          table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>
            <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Blue chip<span class="typ-punct">]</span><span class="typ-punct">,</span>
            <span class="typ-punct">[</span>Fresh IPO<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Penny st&#39;k<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
          table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>
            rowspan<span class="typ-punct">:</span> <span class="typ-num">6</span><span class="typ-punct">,</span>
            align<span class="typ-punct">:</span> horizon<span class="typ-punct">,</span>
            <span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">90deg</span><span class="typ-punct">,</span> reflow<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
              <span class="typ-strong">*USD / day*</span>
            <span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>0.20<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>104<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>5<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>3.17<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>108<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>4<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>1.59<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>84<span class="typ-punct">]</span><span class="typ-punct">,</span>  <span class="typ-punct">[</span>1<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>0.26<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>98<span class="typ-punct">]</span><span class="typ-punct">,</span>  <span class="typ-punct">[</span>15<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>0.01<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>195<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>4<span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>7.34<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>57<span class="typ-punct">]</span><span class="typ-punct">,</span>  <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/03426c23cc565f1e1d7efbcb9b690f8b.png" alt="Preview" width="480" height="190"/></div></div>
      self: false
      params:
      - name: repeat
        details: <p>Whether this header should be repeated across pages.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: children
        details: <p>The cells and lines within the header.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - content
      scope: []
    - path:
      - table
      name: footer
      title: Table Footer
      keywords: []
      oneliner: A repeatable table footer.
      element: true
      contextual: false
      details: |-
        <p>A repeatable table footer.</p>
        <p>Just like the <a href="/docs/reference/model/table/#definitions-header"><code>table.header</code></a> element, the footer can repeat
        itself on every page of the table. This is useful for improving legibility
        by adding the column labels in both the header and footer of a large table,
        totals, or other information that should be visible on every page.</p>
        <p>No other table cells may be placed after the footer.</p>
      example: null
      self: false
      params:
      - name: repeat
        details: <p>Whether this footer should be repeated across pages.</p>
        example: null
        types:
        - bool
        strings: []
        default: <code><span class="typ-key">true</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: children
        details: <p>The cells and lines within the footer.</p>
        example: null
        types:
        - content
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: true
        settable: false
      returns:
      - content
      scope: []
children: []
